[url "git@github.com:"]
	insteadOf = gh:
[url "git@gist.github.com:"]
	insteadOf = gist:
[core]
	editor=vim
	excludesfile = ~/.gitignore
	autocrlf = input
[color]
	ui = auto
	showbranch = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = green
	changed = yellow
	untracked = red
[color "interactive"]
	prompt = yellow
	header = green
	help = cyan
	error = magenta
[color "grep"]
	context = white
	filename = yellow
	function = green
	linenumber = cyan
	match = yellow reverse
	selected = normal
	separator = magenta
[push]
	default = upstream
[branch]
	autosetuprebase = always
[merge]
	tool = meld
[log]
	date = local
[pretty]
	# IDEA: Consider adding diff between author date and committer data.
	custom = "%C(yellow)%h%Creset %Cblue(%an)%Creset \
- %ad %Cgreen(%ar)%Creset -%C(yellow)%d%Creset %s"
    reflog = "%C(yellow)%h%Creset %Cblue(%gn)%Creset - %ad %Cgreen(%ar)%Creset - %C(yellow)%gd%Creset %gs"
[alias]
	a = add
	aa = add --all
	al = config --get-regexp alias
	bl = blame
	bn = branch-name
	branch-name = rev-parse --abbrev-ref HEAD
	ca = commit --amend
	cane = commit --amend --no-edit
	canv = commit --amend --no-verify
	canev = commit --amend --no-edit --no-verify
	cb = checkout -b
	cf = commit --fixup
	ci = commit
	cm = commit -m
	cmnv = commit --no-verify -m
	cnv = commit --no-verify
	co = checkout
	cp = cherry-pick
	d = diff
	fw = flow
	mt = mergetool
	lg = log --graph --decorate --pretty=custom
	pf = push -f
	pfnv = push -f --no-verify
	pj = project
	pl = pull
	pnv = push --no-verify
	project = "!f() { \
		basename $(git rev-parse --show-toplevel); \
	}; f"
	# FIXME: git: '/usr/local/bin/grc' is not a git command. See 'git --help'.
	ps = push
	# https://stackoverflow.com/a/58543046/3775614
	refresh = "!f() { \
		git fetch \
		&& git diff origin/$1 $1 \
		|| { \
			git rebase origin/$1 $1 \
		    && git checkout - \
		;} \
	;;}; f"
	rf = refresh
	ri = rebase -i
	rg = log --walk-reflogs --pretty=reflog
	sh = show
	sm = submodule
	sp = stash pop
	ss = status --short --branch --show-stash
	sv = stash push --keep-index
	tags = tag -l
	this = !git init && git add . && git commit -m \"Initial commit.\"
    # FIXME: Don't work...
	# fix = "!f() { TARGET=$(git rev-parse \"$1\"); git commit --fixup=$TARGET ${@:2} && EDITOR=true git rebase -i --autostash --autosquash $TARGET^; }; f"
	# https://stackoverflow.com/a/15716016/3775614